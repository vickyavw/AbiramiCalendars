/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.0/userguide/java_library_plugin.html
 */

plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
    id 'war'
    id 'eclipse'
    id 'org.gretty' version '2.2.0'
    //jacoco report is needed for test coverages. we can enable later
    //id 'jacoco'
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'
    providedCompile 'javax.servlet:javax.servlet-api:3.1.0'
    compile group: 'javax.servlet', name: 'jstl', version: '1.2'
    //providedCompile 'org.springframework:spring-beans:5.2.7.RELEASE'
    //providedCompile 'org.springframework:spring-context:5.2.7.RELEASE'
    compile 'org.apache.commons:commons-lang3:3.6'
	compile group: 'commons-httpclient', name: 'commons-httpclient', version: '3.1'
    

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:28.0-jre'
    
	compile group: 'org.glassfish.jersey.containers', name: 'jersey-container-servlet', version: '2.31'
	compile group: 'org.glassfish.jersey.inject', name: 'jersey-hk2', version: '2.31'
	compile group: 'org.glassfish.jersey.media', name: 'jersey-media-json-jackson', version: '2.31'

	//compile group: 'com.fasterxml.jackson.jaxrs', name: 'jackson-jaxrs-json-provider', version: '2.11.1'
	//compile group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.11.1'
	
	compile group: 'org.hibernate', name: 'hibernate-core', version: '5.4.10.Final'
	compile group: 'mysql', name: 'mysql-connector-java', version: '8.0.21'

	//runtime 'com.h2database:h2:1.4.197'
	    

    testImplementation 'junit:junit:4.12'
	testCompile group: 'org.mockito', name: 'mockito-core', version: '3.4.0'
}

gretty {
  servletContainer = 'jetty9.4'
  contextPath = '/'
  httpPort = 8080
  //debugPort = 5005
  //debugSuspend = true
}

//jacoco report is needed for test coverages. we can enable later
/*test {
    finalizedBy jacocoTestReport // report is always generated after tests run
}
jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
}*/
